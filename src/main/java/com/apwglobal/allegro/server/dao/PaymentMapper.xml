<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.apwglobal.allegro.server.dao.PaymentDao">

    <sql id="paymentColumns">
        p.*,

        r.id            AS r_id,
        r.country       AS r_country,
        r.street        AS r_street,
        r.code          AS r_code,
        r.city          AS r_city,
        r.fullname      AS r_fullname,
        r.company       AS r_company,
        r.phone         AS r_phone,
        r.nip           AS r_nip,

        o.id            AS o_id,
        o.country       AS o_country,
        o.street        AS o_street,
        o.code          AS o_code,
        o.city          AS o_city,
        o.fullname      AS o_fullname,
        o.company       AS o_company,
        o.phone         AS o_phone,
        o.nip           AS o_nip,

        i.auctionid     AS item_auctionid,
        i.formdealid    AS item_formdealid,
        i.transactionid AS item_transactionid,
        i.sellerId      AS item_sellerid,
        i.title         AS item_title,
        i.price         AS item_price,
        i.quantity      AS item_quantity,
        i.amount        AS item_amount
    </sql>

    <sql id="paymentFromJoins">
        FROM payments p
        INNER JOIN addresses r ON p.receiver_id = r.id
        INNER JOIN addresses o ON p.orderer_id = o.id
        INNER JOIN items i ON p.transactionid = i.transactionid AND p.sellerid = i.sellerid
    </sql>

    <select id="getPaymentById" parameterType="map" resultMap="paymentsMap">
        SELECT <include refid="paymentColumns"/>
        <include refid="paymentFromJoins"/>
        WHERE p.transactionId = #{transactionId} AND p.sellerId = #{sellerId}
    </select>

    <select id="getLastPayments" parameterType="map" resultMap="paymentsMap">
        SELECT <include refid="paymentColumns"/>
        <include refid="paymentFromJoins"/>
        WHERE p.sellerid = #{sellerId}
        ORDER BY p.date DESC
        LIMIT #{limit}
    </select>
    <select id="getPaymentsBetween" parameterType="map" resultMap="paymentsMap">
        SELECT <include refid="paymentColumns"/>
        <include refid="paymentFromJoins"/>
        WHERE
            p.sellerId = #{sellerId}
            <if test="from.isPresent()">
                AND "date" &gt;= #{from,jdbcType=TIMESTAMP}
            </if>
            <if test="to.isPresent()">
                AND "date" &lt;= #{to,jdbcType=TIMESTAMP}
            </if>
        ORDER BY p.date DESC
    </select>

    <select id="getUnprocessed" parameterType="long" resultMap="paymentsMap">
        SELECT <include refid="paymentColumns"/>
        <include refid="paymentFromJoins"/>
        WHERE p.sellerId = #{sellerId} AND p.processed = false
        ORDER BY p.date DESC
    </select>

    <update id="updatePaymentAsProcessed" parameterType="map">
        UPDATE payments set processed = true WHERE transactionId = #{transactionId} AND sellerid = #{sellerId}
    </update>

    <select id="findPaymentProcessed" parameterType="map" resultType="com.apwglobal.nice.domain.PaymentProcessed">
        SELECT * FROM payments_processed WHERE transactionid = #{transactionId} AND sellerid = #{sellerId}
    </select>

    <resultMap id="paymentsMap" type="com.apwglobal.nice.domain.Payment">
        <id property="transactionId" column="transactionId"/>
        <id property="sellerId" column="sellerId"/>

        <result property="buyerId" column="buyerId"/>
        <result property="email" column="email"/>
        <result property="date" column="date"/>
        <result property="amount" column="amount"/>
        <result property="postageAmount" column="postageAmount"/>
        <result property="paymentAmount" column="paymentAmount"/>
        <result property="withInvoice" column="withInvoice"/>
        <result property="msg" column="msg"/>
        <result property="payId" column="payId"/>
        <result property="payStatus" column="payStatus"/>
        <result property="shipment" column="shipment"/>
        <result property="processed" column="processed"/>
        <association property="receiver" column="receiver_id" foreignColumn="id" fetchType="eager"
                     resultMap="addressMap" columnPrefix="r_"/>
        <association property="orderer" column="orderer_id" foreignColumn="id" fetchType="eager"
                     resultMap="addressMap" columnPrefix="o_"/>
        <collection property="items" foreignColumn="transactionid,sellerid" fetchType="eager"
                    columnPrefix="item_" resultMap="itemsMap"/>
    </resultMap>
    <resultMap id="itemsMap" type="com.apwglobal.nice.domain.Item">
        <id property="auctionId" column="auctionid"/>
        <id property="transactionId" column="transactionId"/>
        <id property="formDealId" column="formdealid"/>
        <result property="sellerId" column="sellerid"/>
        <result property="title" column="title"/>
        <result property="price" column="price"/>
        <result property="quantity" column="quantity"/>
        <result property="amount" column="amount"/>
    </resultMap>
    <resultMap id="addressMap" type="com.apwglobal.nice.domain.Address">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="country" column="country"/>
        <result property="street" column="street"/>
        <result property="code" column="code"/>
        <result property="city" column="city"/>
        <result property="fullname" column="fullname"/>
        <result property="company" column="company" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="nip" column="nip" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="saveAddress" keyProperty="id" keyColumn="id">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT nextval('addresses_id_seq')
        </selectKey>
        INSERT INTO addresses
        (id, country, street, code, city, fullname, company, phone, nip)
        VALUES (#{id}, #{country}, #{street}, #{code}, #{city}, #{fullname}, #{company,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{nip,jdbcType=VARCHAR})
    </insert>
    <insert id="savePayment" keyProperty="transactionId" keyColumn="transactionId">
        INSERT INTO payments
        (transactionid, buyerid, sellerId, email, "date", amount, postageamount, paymentamount, withinvoice,
         msg, payid, paystatus, shipment, processed, orderer_id, receiver_id)
        VALUES (#{transactionId}, #{buyerId}, #{sellerId}, #{email}, #{date}, #{amount}, #{postageAmount}, #{paymentAmount}, #{withInvoice},
                #{msg,jdbcType=VARCHAR}, #{payId}, #{payStatus}, #{shipment}, #{processed}, #{orderer.id}, #{receiver.id})
    </insert>
    <insert id="saveItem">
        INSERT INTO items
        (auctionid, formdealid, transactionid, sellerid, title, price, quantity, amount)
        VALUES (#{auctionId}, #{formDealId}, #{transactionId}, #{sellerId}, #{title}, #{price}, #{quantity}, #{amount})
    </insert>
    <insert id="savePaymentProcessed">
        INSERT INTO payments_processed
        (transactionid, sellerid, date, ref) VALUES (#{transactionId}, #{sellerId}, #{date}, #{ref})
    </insert>

    <select id="wasItemPaid" parameterType="map" resultType="boolean">
        SELECT count(*) > 0
        FROM payments p, items i
        WHERE p.transactionid = i.transactionid AND
              p.processed = true AND p.date > #{from} AND p.buyerid = #{buyerId} AND i.id = #{itemId}
    </select>

</mapper>